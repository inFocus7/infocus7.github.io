{"version":3,"sources":["me.jpg","components/side_nav/user_info.jsx","components/side_nav/nav_opts.jsx","components/side_nav.jsx","components/content/about_me.jsx","components/content/projects.jsx","components/content/work_experience.jsx","components/content/fun_facts.jsx","components/content/org_involvement.jsx","components/content.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Icons","props","style","margin","textAlign","id","className","href","target","rel","size","UserInfo","src","img","alt","isMini","NavOpts","SideNav","AboutMe","color","Projects","WorkExperience","FunFacts","OrgInvolvement","Content","getWindowDimensions","window","width","innerWidth","height","innerHeight","App","useState","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","useWindowDimensions","isMiniWidth","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.34a4656f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/me.d927b8c9.jpg\";","import React from \"react\";\r\nimport { FaTwitter, FaGithub, FaLinkedin } from \"react-icons/fa\";\r\nimport img from \"../../me.jpg\";\r\n\r\nconst Icons = (props) => {\r\n  return (\r\n    <div style={{ margin: \"0 auto\", textAlign: \"center\" }}>\r\n      <ul id=\"info-icon-list\">\r\n        <div className=\"info-icon\">\r\n          <a\r\n            href=\"http://github.com/infocus7/\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            className=\"sm_icon\"\r\n          >\r\n            <FaGithub size=\"6.7%\" />\r\n          </a>\r\n        </div>\r\n\r\n        <div className=\"info-icon\">\r\n          <a\r\n            href=\"https://www.linkedin.com/in/fabiangonz98/\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            className=\"sm_icon\"\r\n          >\r\n            <FaLinkedin size=\"6.7%\" />\r\n          </a>\r\n        </div>\r\n\r\n        <div className=\"info-icon\">\r\n          <a\r\n            href=\"https://twitter.com/fabiangonz98\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            className=\"sm_icon\"\r\n          >\r\n            <FaTwitter size=\"6.7%\" />\r\n          </a>\r\n        </div>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default function UserInfo(props) {\r\n  return (\r\n    <div id=\"info-layout\">\r\n      <div className=\"outer-img\">\r\n        <img className=\"inner-img\" src={img} alt=\"Fabian, the creator.\" />\r\n      </div>\r\n\r\n      {props.isMini ? (\r\n        <div id=\"info-text\">\r\n          <p id=\"info-name\">Fabi√°n Gonz√°lez</p>\r\n\r\n          <p id=\"info-degree\">B.Cs. in Computer Science</p>\r\n\r\n          <p id=\"info-position\">Software Engineer, Full Stack Developer</p>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <p id=\"info-name\">Fabi√°n Gonz√°lez</p>\r\n\r\n          <p id=\"info-degree\">B.Cs. in Computer Science</p>\r\n\r\n          <p id=\"info-position\">Software Engineer, Full Stack Developer</p>\r\n        </>\r\n      )}\r\n\r\n      <Icons id=\"info-icons\" />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\n// TODO Clicking a navopt should send you to a section '#'\r\n// TODO If in that section, highlight the nav thing.\r\n\r\nexport default function NavOpts() {\r\n    return(\r\n        <div>\r\n        </div>\r\n    );\r\n};","import React from 'react';\r\nimport UserInfo from './side_nav/user_info'\r\nimport NavOpts from './side_nav/nav_opts'\r\n\r\nexport default function SideNav(props) {\r\n    return(\r\n        <div id=\"side-nav\">\r\n            <UserInfo\r\n                isMini={props.isMini}\r\n                id=\"user-info\"\r\n            />\r\n\r\n            <div>\r\n                <NavOpts\r\n                    isMini={props.isMini}\r\n                    id=\"nav-opts\"\r\n                />\r\n            </div>\r\n\r\n            <>\r\n            </>\r\n        </div>\r\n    );\r\n};","import React from 'react';\r\n\r\n// TODO Maybe store info/points in an online DB. Then axios.get() info.\r\n// Allowing for updating info w/o needing to mess with this anymore...\r\nconst AboutMe = (props) => {\r\n    return(\r\n        <>\r\n            <h2 className=\"section-subtitle\"> Hi! </h2>\r\n            <p className=\"section-info\">\r\n                My name is Fabian Gonzalez and I graduated from <b style={{color: \"rgb(240,80,35)\"}}>The University of Texas Rio Grande Valley</b> with a B.Sc. in Computer Science in May 2020. üéì\r\n            </p>\r\n            <pre className=\"prettyprint\">\r\n                    { `\r\n\r\n                    ` }\r\n            </pre>\r\n            <p className=\"section-info\">\r\n                My main focuses align with full stack technologies, where skills revolve React, SQL, \r\n            </p>\r\n        </>\r\n    );\r\n}\r\n\r\n/* Could do a SQL statement that selects skills/fun from fabian in multiverse.universe.milkyway.earth.texas\r\n\r\n\r\n\r\n*/\r\nexport default AboutMe;","import React from 'react';\r\n\r\n// TODO Showcase projects in a horizontal list of squares. When clicking one either expand (not bad), pop-up modal (eh), or redirect to project info..\r\n// Main project: Vocaloo. EARLY W.I.P. meant to learn about settings up services (socket.io, aws, etc), using graphql + node, react native, react, project management, ui/ux mockup, etc.\r\n// Side projecs: Resume, Haxxor-News, ScanAwake, Collabd, Self-Chat,\r\nconst Projects = (props) => {\r\n    return(\r\n        <>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Projects;","import React from 'react';\r\n\r\n\r\nconst WorkExperience = (props) => {\r\n    return(\r\n        <>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default WorkExperience;","import React from 'react';\r\n\r\n\r\nconst FunFacts = (props) => {\r\n    return(\r\n        <>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default FunFacts;","import React from 'react';\r\n\r\n\r\nconst OrgInvolvement = (props) => {\r\n    return(\r\n        <>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default OrgInvolvement;","import React from \"react\";\r\nimport AboutMe from \"./content/about_me\";\r\nimport Projects from './content/projects';\r\nimport WorkExperience from './content/work_experience';\r\nimport FunFacts from './content/fun_facts';\r\nimport OrgInvolvement from './content/org_involvement';\r\n\r\nexport default function Content() {\r\n  return (\r\n    <div id=\"content-grid\">\r\n      <div>\r\n        <div id=\"about-me\">\r\n          <h1 className=\"section-title\"> About Me </h1>\r\n          <AboutMe/>\r\n        </div>\r\n        <br/>\r\n      </div>\r\n\r\n      <div>\r\n        <div id=\"work-experience\">\r\n          <h1 className=\"section-title\"> Work Experience </h1>\r\n          <WorkExperience/>\r\n        </div>\r\n        <br/>\r\n      </div>\r\n\r\n      <div>\r\n        <div id=\"projects\">\r\n          <h1 className=\"section-title\"> Projects </h1>\r\n          <Projects/>\r\n        </div>\r\n        <br/>\r\n      </div>\r\n\r\n      <div>\r\n        <div id=\"orgs\">\r\n          <h1 className=\"section-title\"> Organizations </h1>\r\n          <OrgInvolvement/>\r\n        </div>\r\n        <br/>\r\n      </div>\r\n\r\n      <div>\r\n        <div id=\"misc\">\r\n          <h1 className=\"section-title\"> Fun Facts </h1>\r\n          <FunFacts/>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport SideNav from \"./components/side_nav\";\nimport Content from \"./components/content\";\nimport UserInfo from \"./components/side_nav/user_info\";\nimport NavOpts from \"./components/side_nav/nav_opts\";\n\n//const minVal = 900;\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return { width, height };\n}\n\nfunction useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(\n    getWindowDimensions()\n  );\n\n  useEffect(() => {\n    const handleResize = () => {\n      setWindowDimensions(getWindowDimensions());\n    };\n\n    window.addEventListener(\"resize\", handleResize);\n\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  return windowDimensions;\n}\n\nfunction App() {\n  // TODO Possibly remove if not needed for icons.\n  // TODO Add some media queries involving height display\n  const { height, width } = useWindowDimensions();\n\n  // TODO optimize so it doesn't re-render children when getting window dims...\n  const isMiniWidth = width < 900;\n\n  // TODO Keep Side content on side when scrolling.\n  // TODO Keep UserInfo + NavOptions in their place when scrolling.\n  // if(isMiniWidth)\n  //   console.log('IS MINI!')\n  // else\n  //   console.log('IS BIG!')\n  return (\n    <div id=\"app\">\n      <div id=\"view\">\n        {isMiniWidth ? (\n          <>\n            <UserInfo isMini={isMiniWidth} id=\"user-info\"/>\n            <Content isMini={isMiniWidth} />\n            <NavOpts isMini={isMiniWidth} id=\"nav-opts\"/>\n          </>\n        ) : (\n          <>\n            <SideNav isMini={isMiniWidth} />\n            <Content isMini={isMiniWidth} />\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}