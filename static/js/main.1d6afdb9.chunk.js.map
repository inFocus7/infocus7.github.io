{"version":3,"sources":["me.jpg","components/svgs/cpp.svg","components/svgs/react-2.svg","components/svgs/javascript.svg","components/svgs/postgresql.svg","components/svgs/php-1.svg","components/svgs/figma-1.svg","components/svgs/nodejs-icon.svg","components/svgs/ruby.svg","components/svgs/graphql.svg","components/svgs/typescript.svg","components/svgs/flutter-logo.svg","devices.js","components/side_nav/user_info.jsx","components/side_nav/nav_opts.jsx","components/side_nav.jsx","components/content/skill_badge.jsx","components/content/about_me.jsx","components/content/projects.jsx","components/content/work_experience.jsx","components/content/fun_facts.jsx","components/content/org_involvement.jsx","components/content.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","deviceSize","mediaQuery","xs","s","m","l","xl","xxl","icons","icon","FaGithub","link","FaLinkedin","FaTwitter","IconList","styled","ul","IconListContainer","div","Icon","IconLink","a","InfoLayout","OuterImg","InnerImg","img","InfoText","InfoName","p","InfoDegree","InfoPosition","Icons","props","map","i","href","target","rel","size","UserInfo","id","className","src","alt","isMini","NavOpts","Nav","SideNav","SkillBadgeStyle","norm","SkillBadgeIconContainer","SkillBadgeIcon","SkillBadgeName","add","SkillBadge","name","key","additional","skillInfo","CppSVG","ReactSVG","JsSVG","SQLSVG","PHPSVG","FigmaSVG","additionalSkillInfo","NodeSVG","RubySVG","GraphQLSVG","TypeScript","Flutter","SectionSubtitle","h2","SectionInfo","SkillList","SkillListItem","AdditionalSkillList","AdditionalSkillListItem","AboutMe","style","color","skill","Projects","WorkExperience","FunFacts","OrgInvolvement","ContentGrid","SectionTitle","h1","Content","getWindowDimensions","window","width","innerWidth","height","innerHeight","AppStyle","View","App","useState","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","useWindowDimensions","isMiniWidth","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"2FAAAA,EAAOC,QAAU,IAA0B,gC,mBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,kNCArCC,EAEC,IAFDA,EAGC,IAHDA,EAIC,KAJDA,EAKE,KALFA,EAMG,KAGIC,EAAa,CACtBC,GAAG,eAAD,OATE,IASF,OACFC,EAAE,eAAD,OAAiBH,EAAjB,OACDI,EAAE,eAAD,OAAiBJ,EAAjB,OACDK,EAAE,eAAD,OAAiBL,EAAjB,OACDM,GAAG,eAAD,OAAiBN,EAAjB,OACFO,IAAI,eAAD,OAAiBP,EAAjB,Q,g9FCTP,IAAMQ,EAAQ,CACZ,CAAEC,KAAMC,IAAUC,KAAM,+BACxB,CAAEF,KAAMG,IAAYD,KAAM,6CAC1B,CAAEF,KAAMI,IAAWF,KAAM,qCAGrBG,EAAWC,IAAOC,GAAV,IAMHf,EAAWG,GAKhBa,EAAoBF,IAAOG,IAAV,KAKjBC,EAAOJ,IAAOG,IAAV,KAKJE,EAAWL,IAAOM,EAAV,KAYRC,EAAaP,IAAOG,IAAV,IASLjB,EAAWG,GAQhBmB,EAAWR,IAAOG,IAAV,IAUHjB,EAAWG,GAOhBoB,EAAWT,IAAOU,IAAV,IAKHxB,EAAWG,GAMhBsB,EAAWX,IAAOG,IAAV,KAURS,EAAWZ,IAAOa,EAAV,IAUH3B,EAAWE,EAMXF,EAAWG,GAUhByB,EAAad,IAAOa,EAAV,IAOL3B,EAAWG,GAQhB0B,EAAef,IAAOa,EAAV,IAOP3B,EAAWG,GAQhB2B,EAAQ,SAACC,GACb,OACE,kBAACf,EAAD,KACE,kBAACH,EAAD,KACGN,EAAMyB,KAAI,SAACC,GACV,OACE,kBAACf,EAAD,KACE,kBAACC,EAAD,CAAUe,KAAMD,EAAEvB,KAAMyB,OAAO,SAASC,IAAI,uBAC1C,kBAACH,EAAEzB,KAAH,CAAQ6B,KAAK,iBAUd,SAASC,EAASP,GAC/B,OACE,kBAACV,EAAD,CAAYkB,GAAG,eACb,kBAACjB,EAAD,CAAUkB,UAAU,aAClB,kBAACjB,EAAD,CAAUiB,UAAU,YAAYC,IAAKjB,IAAKkB,IAAI,0BAG/CX,EAAMY,OACL,kBAAClB,EAAD,CAAUc,GAAG,aACX,kBAACb,EAAD,CAAUa,GAAG,aAAb,yBAEA,kBAACX,EAAD,CAAYW,GAAG,eAAf,6BAEA,kBAACV,EAAD,CAAcU,GAAG,iBAAjB,4CAKF,oCACE,kBAACb,EAAD,CAAUa,GAAG,aAAb,yBAEA,kBAACX,EAAD,CAAYW,GAAG,eAAf,6BAEA,kBAACV,EAAD,CAAcU,GAAG,iBAAjB,4CAMJ,kBAAC,EAAD,CAAOA,GAAG,gBCtMD,SAASK,IACtB,OAAO,8B,qKCDT,IAAMC,EAAM/B,IAAOG,IAAV,KAOM,SAAS6B,EAAQf,GAC9B,OACE,kBAACc,EAAD,KACE,kBAACP,EAAD,CAAUK,OAAQZ,EAAMY,OAAQJ,GAAG,cAEnC,6BACE,kBAACK,EAAD,CAASD,OAAQZ,EAAMY,OAAQJ,GAAG,e,y4ECX1C,IAAMQ,GAAkBjC,IAAOG,IAAV,MAKf+B,GAAO,CACXC,wBAAyBnC,IAAOG,IAAT,MACvBiC,eAAgBpC,IAAOU,IAAT,IAgBHxB,EAAWE,EAKXF,EAAWI,GAKtB+C,eAAgBrC,IAAOa,EAAT,IASH3B,EAAWE,EAIXF,EAAWI,EAIXJ,EAAWK,GAIXL,EAAWM,MAMlB8C,GAAM,CACVH,wBAAyBnC,IAAOG,IAAT,KACvBiC,eAAgBpC,IAAOU,IAAT,IAqBHxB,EAAWG,EAKXH,EAAWI,EAKXJ,EAAWK,IAKtB8C,eAAgBrC,IAAOa,EAAT,IASH3B,EAAWG,EAIXH,EAAWI,EAIXJ,EAAWK,KAMT,SAASgD,GAAWtB,GAAQ,IACjCuB,EAAoBvB,EAApBuB,KAAM9C,EAAcuB,EAAdvB,KAAM+C,EAAQxB,EAARwB,IADoB,EAOpCxB,EAAMyB,WAAN,eAAwBJ,IAAxB,eAAqCJ,IAHvCC,EAJsC,EAItCA,wBACAC,EALsC,EAKtCA,eACAC,EANsC,EAMtCA,eAGF,OACE,kBAACJ,GAAD,CAAiBP,UAAU,cAAce,IAAKA,GAC5C,kBAACN,EAAD,CACET,WACGT,EAAMyB,WAAa,cAAgB,IAAM,6BAE5CjB,GAAIe,EAAO,gBAEV9C,GACC,kBAAC0C,EAAD,CACET,IAAKjC,EACLgC,WACGT,EAAMyB,WAAa,cAAgB,IAAM,mBAE5Cd,IAAKY,KAKX,kBAACH,EAAD,CACEX,WAAYT,EAAMyB,WAAa,cAAgB,IAAM,oBAEpDF,I,0iFC5IT,IAAMG,GAAY,CAChB,CAAEH,KAAM,MAAO9C,KAAMkD,MACrB,CAAEJ,KAAM,QAAS9C,KAAMmD,MACvB,CAAEL,KAAM,aAAc9C,KAAMoD,MAC5B,CAAEN,KAAM,MAAO9C,KAAMqD,MACrB,CAAEP,KAAM,MAAO9C,KAAMsD,MACrB,CAAER,KAAM,QAAS9C,KAAMuD,MACvB,CAAET,KAAM,eAAgB9C,KAAM,KAG1BwD,GAAsB,CAC1B,CAAEV,KAAM,UAAW9C,KAAMyD,MACzB,CAAEX,KAAM,OAAQ9C,KAAM0D,MACtB,CAAEZ,KAAM,UAAW9C,KAAM2D,MACzB,CAAEb,KAAM,aAAc9C,KAAM4D,MAC5B,CAAEd,KAAM,UAAW9C,KAAM6D,MACzB,CAAEf,KAAM,oBAAqB9C,KAAM,KAG/B8D,GAAkBxD,IAAOyD,GAAV,KAiBVvE,EAAWE,EAIXF,EAAWG,GAMhBqE,GAAc1D,IAAOa,EAAV,KAKN3B,EAAWE,EAIXF,EAAWG,GAMhBsE,GAAY3D,IAAOG,IAAV,KAQJjB,EAAWE,EAMXF,EAAWG,EAQXH,EAAWI,EAMXJ,EAAWK,GAMXL,EAAWM,KAOhBoE,GAAgB5D,IAAOG,IAAV,MAEb0D,GAAsB7D,IAAOG,IAAV,KAQdjB,EAAWE,EAKXF,EAAWG,EAQXH,EAAWI,GAMhBwE,GAA0B9D,IAAOG,IAAV,MA4Dd4D,GA1DC,SAAC9C,GACf,OACE,oCACE,kBAACuC,GAAD,CAAiB9B,UAAU,oBAA3B,SACA,kBAACgC,GAAD,CAAahC,UAAU,gBAAvB,kDACkD,IAChD,uBAAGsC,MAAO,CAAEC,MAAO,mBAAnB,6CAEK,IAJP,8DAUA,6BAEA,kBAACT,GAAD,CAAiB9B,UAAU,oBAA3B,YACA,kBAACiC,GAAD,CAAWjC,UAAU,cAClBiB,GAAUzB,KAAI,SAACgD,GACd,OACE,kBAACN,GAAD,CAAelC,UAAU,mBACtBa,GAAW,CACVC,KAAM0B,EAAM1B,KACZ9C,KAAMwE,EAAMxE,KACZgD,YAAY,EACZD,IAAKyB,EAAM1B,YAOrB,6BAEA,kBAACgB,GAAD,CAAiB9B,UAAU,oBACxB,IADH,oBAEoB,KAEpB,kBAACmC,GAAD,CAAqBnC,UAAU,yBAC5BwB,GAAoBhC,KAAI,SAACgD,GACxB,OACE,kBAACJ,GAAD,CAAyBpC,UAAU,8BAChCa,GAAW,CACVC,KAAM0B,EAAM1B,KACZ9C,KAAMwE,EAAMxE,KACZgD,YAAY,EACZD,IAAKyB,EAAM1B,cCzLZ2B,GARE,SAAClD,GAChB,OACE,sCCDWmD,GAJQ,SAACnD,GACtB,OAAO,sCCGMoD,GAJE,SAACpD,GAChB,OAAO,sCCGMqD,GAJQ,SAACrD,GACtB,OAAO,sC,qcCMT,IAAMsD,GAAcvE,IAAOG,IAAV,MAMXqE,GAAexE,IAAOyE,GAAV,KAOPvF,EAAWE,EAIXF,EAAWG,GAMP,SAASqF,KACtB,OACE,kBAACH,GAAD,KACE,6BACE,yBAAK9C,GAAG,YACN,kBAAC+C,GAAD,mBACA,kBAAC,GAAD,OAEF,8BAGF,6BACE,yBAAK/C,GAAG,mBACN,kBAAC+C,GAAD,0BACA,kBAAC,GAAD,OAEF,8BAGF,6BACE,yBAAK/C,GAAG,YACN,kBAAC+C,GAAD,mBACA,kBAAC,GAAD,OAEF,8BAGF,6BACE,yBAAK/C,GAAG,QACN,kBAAC+C,GAAD,wBACA,kBAAC,GAAD,OAEF,8BAGF,6BACE,yBAAK/C,GAAG,QACN,kBAAC+C,GAAD,oBACA,kBAAC,GAAD,S,8YC1DV,SAASG,KAAuB,IAAD,EACsBC,OACnD,MAAO,CAAEC,MAFoB,EACrBC,WACQC,OAFa,EACFC,aAsB7B,IAAMC,GAAWjF,IAAOG,IAAV,MAKR+E,GAAOlF,IAAOG,IAAV,KAMCjB,EAAWG,GAwCP8F,OAlCf,WAAe,MAnCf,WAAgC,IAAD,EACmBC,mBAC9CT,MAF2B,mBACtBU,EADsB,KACJC,EADI,KAe7B,OAVAC,qBAAU,WACR,IAAMC,EAAe,WACnBF,EAAoBX,OAKtB,OAFAC,OAAOa,iBAAiB,SAAUD,GAE3B,kBAAMZ,OAAOc,oBAAoB,SAAUF,MACjD,IAEIH,EAuBmBM,GAGpBC,GANO,EAGLb,OAHK,EAGGF,MAGY,KAQ5B,OACE,kBAACI,GAAD,KACE,kBAACC,GAAD,KACGU,EACC,oCACE,kBAACpE,EAAD,CAAUK,OAAQ+D,EAAanE,GAAG,cAClC,kBAACiD,GAAD,CAAS7C,OAAQ+D,IACjB,kBAAC9D,EAAD,CAASD,OAAQ+D,EAAanE,GAAG,cAGnC,oCACE,kBAACO,EAAD,CAASH,OAAQ+D,IACjB,kBAAClB,GAAD,CAAS7C,OAAQ+D,QClETC,QACW,cAA7BjB,OAAOkB,SAASC,UAEe,UAA7BnB,OAAOkB,SAASC,UAEhBnB,OAAOkB,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.1d6afdb9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/me.d927b8c9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/cpp.5be9bde4.svg\";","module.exports = __webpack_public_path__ + \"static/media/react-2.c3fbd71b.svg\";","module.exports = __webpack_public_path__ + \"static/media/javascript.61ed8b05.svg\";","module.exports = __webpack_public_path__ + \"static/media/postgresql.d7c985e7.svg\";","module.exports = __webpack_public_path__ + \"static/media/php-1.7634d1a3.svg\";","module.exports = __webpack_public_path__ + \"static/media/figma-1.80505242.svg\";","module.exports = __webpack_public_path__ + \"static/media/nodejs-icon.b337a2fb.svg\";","module.exports = __webpack_public_path__ + \"static/media/ruby.8318adfc.svg\";","module.exports = __webpack_public_path__ + \"static/media/graphql.6270a2d4.svg\";","module.exports = __webpack_public_path__ + \"static/media/typescript.3de182d2.svg\";","module.exports = __webpack_public_path__ + \"static/media/flutter-logo.bd9fec89.svg\";","const deviceSize = {\r\n    xs: 300,\r\n    s: 600,\r\n    m: 900,\r\n    l: 1200,\r\n    xl: 1500,\r\n    xxl: 1800\r\n}\r\n\r\nexport const mediaQuery = {\r\n    xs: `(min-width: ${deviceSize.xs}px)`,\r\n    s: `(min-width: ${deviceSize.s}px)`,\r\n    m: `(min-width: ${deviceSize.m}px)`,\r\n    l: `(min-width: ${deviceSize.l}px)`,\r\n    xl: `(min-width: ${deviceSize.xl}px)`,\r\n    xxl: `(min-width: ${deviceSize.xxl}px)`,\r\n  };","import React from \"react\";\r\nimport { FaTwitter, FaGithub, FaLinkedin } from \"react-icons/fa\";\r\nimport img from \"../../me.jpg\";\r\nimport styled from \"styled-components\";\r\nimport { mediaQuery } from \"../../devices\";\r\n\r\nconst icons = [\r\n  { icon: FaGithub, link: \"http://github.com/infocus7/\" },\r\n  { icon: FaLinkedin, link: \"https://www.linkedin.com/in/fabiangonz98/\" },\r\n  { icon: FaTwitter, link: \"https://twitter.com/fabiangonz98\" },\r\n];\r\n\r\nconst IconList = styled.ul`\r\n  list-style-type: none;\r\n  padding: 0;\r\n  margin: 0;\r\n  display: none;\r\n\r\n  @media ${mediaQuery.m} {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst IconListContainer = styled.div`\r\n  margin: 0 auto;\r\n  text-align: center;\r\n`;\r\n\r\nconst Icon = styled.div`\r\n  display: inline;\r\n  margin-right: 12px;\r\n`;\r\n\r\nconst IconLink = styled.a`\r\n  color: rgba(0, 0, 0, 0.75);\r\n\r\n  :hover {\r\n    color: rgba(0, 0, 0, 0.9);\r\n  }\r\n\r\n  :visited {\r\n    color: rgba(0, 0, 0, 0.75);\r\n  }\r\n`;\r\n\r\nconst InfoLayout = styled.div`\r\n  display: grid;\r\n  gap: 0rem;\r\n  grid-template-columns: repeat(2, auto);\r\n  justify-content: center;\r\n  justify-items: center;\r\n  vertical-align: center;\r\n  align-items: center;\r\n\r\n  @media ${mediaQuery.m} {\r\n    grid-template-columns: none; /* Didn't realize rows stayed active */\r\n    grid-template-rows: repeat(5, auto);\r\n    justify-content: center;\r\n    justify-items: center;\r\n  }\r\n`;\r\n\r\nconst OuterImg = styled.div`\r\n  background: rgba(0, 0, 0, 0.1);\r\n  border-radius: 50%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 50px;\r\n  height: 50px;\r\n  box-shadow: 0px 2px 10px 0px rgba(0, 0, 0, 0.1);\r\n\r\n  @media ${mediaQuery.m} {\r\n    width: 162px;\r\n    height: 162px;\r\n    box-shadow: 0px 2px 10px 0px rgba(0, 0, 0, 0.1);\r\n  }\r\n`;\r\n\r\nconst InnerImg = styled.img`\r\n  border-radius: 50%;\r\n  width: 45px;\r\n  height: 45px;\r\n\r\n  @media ${mediaQuery.m} {\r\n    width: 150px;\r\n    height: 150px;\r\n  }\r\n`;\r\n\r\nconst InfoText = styled.div`\r\n  display: grid;\r\n  gap: 0rem;\r\n  grid-template-rows: repeat(3, auto);\r\n  justify-content: center;\r\n  justify-items: center;\r\n  vertical-align: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst InfoName = styled.p`\r\n  cursor: default;\r\n  font-weight: 800;\r\n  padding: 0px;\r\n  padding: 0px;\r\n  color: rgba(0, 0, 0, 0.8);\r\n  font-size: 1.7rem;\r\n  margin: 0px 0px 0px 2vw;\r\n  align-self: center;\r\n\r\n  @media ${mediaQuery.s} {\r\n    font-weight: 800;\r\n    margin: 0px 0px 0px 2vw;\r\n    font-size: 2.3rem;\r\n  }\r\n\r\n  @media ${mediaQuery.m} {\r\n    font-weight: 800;\r\n    margin: 0px 0px 0px 2vw;\r\n    font-size: 1.5rem;\r\n    display: block;\r\n    font-size: 1.35rem;\r\n    margin: 4px 0px 0px 0px;\r\n  }\r\n`;\r\n\r\nconst InfoDegree = styled.p`\r\n  margin: 0px;\r\n  color: rgba(0, 0, 0, 0.7);\r\n  padding: 0px;\r\n  font-size: 1rem;\r\n  font-weight: 600;\r\n\r\n  @media ${mediaQuery.m} {\r\n    font-size: 1rem;\r\n    font-weight: 600;\r\n    margin: 2px 0px 0px 0px;\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst InfoPosition = styled.p`\r\n  margin: 0px;\r\n  color: rgba(0, 0, 0, 0.6);\r\n  padding: 0px;\r\n  font-size: 0.9rem;\r\n  font-weight: 500;\r\n\r\n  @media ${mediaQuery.m} {\r\n    font-size: 0.9rem;\r\n    font-weight: 500;\r\n    margin: 2px 0px 6px 0px;\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst Icons = (props) => {\r\n  return (\r\n    <IconListContainer>\r\n      <IconList>\r\n        {icons.map((i) => {\r\n          return (\r\n            <Icon>\r\n              <IconLink href={i.link} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                <i.icon size=\"6.7%\" />\r\n              </IconLink>\r\n            </Icon>\r\n          );\r\n        })}\r\n      </IconList>\r\n    </IconListContainer>\r\n  );\r\n};\r\n\r\nexport default function UserInfo(props) {\r\n  return (\r\n    <InfoLayout id=\"info-layout\">\r\n      <OuterImg className=\"outer-img\">\r\n        <InnerImg className=\"inner-img\" src={img} alt=\"Fabian, the creator.\" />\r\n      </OuterImg>\r\n\r\n      {props.isMini ? (\r\n        <InfoText id=\"info-text\">\r\n          <InfoName id=\"info-name\">Fabián González</InfoName>\r\n\r\n          <InfoDegree id=\"info-degree\">B.Cs. in Computer Science</InfoDegree>\r\n\r\n          <InfoPosition id=\"info-position\">\r\n            Software Engineer, Full Stack Developer\r\n          </InfoPosition>\r\n        </InfoText>\r\n      ) : (\r\n        <>\r\n          <InfoName id=\"info-name\">Fabián González</InfoName>\r\n\r\n          <InfoDegree id=\"info-degree\">B.Cs. in Computer Science</InfoDegree>\r\n\r\n          <InfoPosition id=\"info-position\">\r\n            Software Engineer, Full Stack Developer\r\n          </InfoPosition>\r\n        </>\r\n      )}\r\n\r\n      <Icons id=\"info-icons\" />\r\n    </InfoLayout>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\n// TODO Clicking a navopt should send you to a section '#'\r\n// TODO If in that section, highlight the nav thing.\r\n\r\nexport default function NavOpts() {\r\n  return <div></div>;\r\n}\r\n","import React from \"react\";\r\nimport UserInfo from \"./side_nav/user_info\";\r\nimport NavOpts from \"./side_nav/nav_opts\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Nav = styled.div`\r\n  display: grid;\r\n  grid-template-rows: auto auto 100%;\r\n  gap: 0.5rem;\r\n  max-width: 300px;\r\n`;\r\n\r\nexport default function SideNav(props) {\r\n  return (\r\n    <Nav>\r\n      <UserInfo isMini={props.isMini} id=\"user-info\" />\r\n\r\n      <div>\r\n        <NavOpts isMini={props.isMini} id=\"nav-opts\" />\r\n      </div>\r\n    </Nav>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport HoverPerspectiviser from \"../hover-perspectiviser\";\r\nimport { mediaQuery } from \"../../devices\";\r\nimport styled from \"styled-components\";\r\n// TODO: On icon hover: scale up, add drop shadow, and rotate/skew (\"3d\") based on mouse pointer location!\r\n// TODO: Show skills on a grid\r\n\r\nconst SkillBadgeStyle = styled.div`\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`;\r\n\r\nconst norm = {\r\n  SkillBadgeIconContainer: styled.div``,\r\n  SkillBadgeIcon: styled.img`\r\n    width: 100px;\r\n    height: 100px;\r\n    transition: all 200ms;\r\n    object-fit: contain;\r\n    transition: all 200ms;\r\n    -webkit-transition: all 200ms;\r\n    -moz-transition: all 200ms;\r\n\r\n    :hover {\r\n      transform: scale(1.1);\r\n      transition: all 200ms;\r\n      -webkit-transition: all 200ms;\r\n      -moz-transition: all 200ms;\r\n    }\r\n\r\n    @media ${mediaQuery.s} {\r\n      width: 110px;\r\n      height: 110px;\r\n    }\r\n\r\n    @media ${mediaQuery.l} {\r\n      width: 130px;\r\n      height: 130px;\r\n    }\r\n  `,\r\n  SkillBadgeName: styled.p`\r\n    text-align: center;\r\n    margin: 5px 0 0 0;\r\n    font-size: 1.2em;\r\n    font-weight: 700;\r\n    transition: all 200ms;\r\n    -webkit-transition: all 200ms;\r\n    -moz-transition: all 200ms;\r\n\r\n    @media ${mediaQuery.s} {\r\n      font-size: 1.2em;\r\n    }\r\n\r\n    @media ${mediaQuery.l} {\r\n      font-size: 1.2em;\r\n    }\r\n\r\n    @media ${mediaQuery.xl} {\r\n      font-size: 1.3em;\r\n    }\r\n\r\n    @media ${mediaQuery.xxl} {\r\n      font-size: 1.3em;\r\n    }\r\n  `,\r\n};\r\n\r\nconst add = {\r\n  SkillBadgeIconContainer: styled.div``,\r\n  SkillBadgeIcon: styled.img`\r\n    width: 55px;\r\n    height: 55px;\r\n    transition: all 200ms;\r\n    object-fit: contain;\r\n    transition: all 200ms;\r\n    -webkit-transition: all 200ms;\r\n    -moz-transition: all 200ms;\r\n    opacity: .8;\r\n    filter: grayscale(25%);\r\n\r\n    :hover {\r\n      transform: scale(1.1);\r\n      transition: all 200ms;\r\n      -webkit-transition: all 200ms;\r\n      opacity: .9;\r\n      filter: grayscale(15%);\r\n\r\n      -moz-transition: all 200ms;\r\n    }\r\n\r\n    @media ${mediaQuery.m} {\r\n      width: 60px;\r\n      height: 60px;\r\n    }\r\n\r\n    @media ${mediaQuery.l} {\r\n      width: 70px;\r\n      height: 70px;\r\n    }\r\n\r\n    @media ${mediaQuery.xl} {\r\n      width: 80px;\r\n      height: 80px;\r\n    }\r\n  `,\r\n  SkillBadgeName: styled.p`\r\n    text-align: center;\r\n    margin: 5px 0 0 0;\r\n    font-size: 0.8em;\r\n    font-weight: 700;\r\n    transition: all 200ms;\r\n    -webkit-transition: all 200ms;\r\n    -moz-transition: all 200ms;\r\n\r\n    @media ${mediaQuery.m} {\r\n      font-size: 0.9em;\r\n    }\r\n\r\n    @media ${mediaQuery.l} {\r\n      font-size: 1em;\r\n    }\r\n\r\n    @media ${mediaQuery.xl} {\r\n      font-size: 1.1em;\r\n    }\r\n  `,\r\n};\r\n\r\nexport default function SkillBadge(props) {\r\n  const { name, icon, key } = props;\r\n\r\n  const {\r\n    SkillBadgeIconContainer,\r\n    SkillBadgeIcon,\r\n    SkillBadgeName,\r\n  } = props.additional ? { ...add } : { ...norm };\r\n\r\n  return (\r\n    <SkillBadgeStyle className=\"skill-badge\" key={key}>\r\n      <SkillBadgeIconContainer\r\n        className={\r\n          (props.additional ? \"additional-\" : \"\") + \"skill-badge-icon-container\"\r\n        }\r\n        id={name + \"-p-container\"}\r\n      >\r\n        {icon && (\r\n          <SkillBadgeIcon\r\n            src={icon}\r\n            className={\r\n              (props.additional ? \"additional-\" : \"\") + \"skill-badge-icon\"\r\n            }\r\n            alt={name}\r\n          />\r\n        )}\r\n      </SkillBadgeIconContainer>\r\n\r\n      <SkillBadgeName\r\n        className={(props.additional ? \"additional-\" : \"\") + \"skill-badge-name\"}\r\n      >\r\n        {name}\r\n      </SkillBadgeName>\r\n    </SkillBadgeStyle>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport SkillBadge from \"./skill_badge\";\r\nimport CppSVG from \"../svgs/cpp.svg\";\r\nimport ReactSVG from \"../svgs/react-2.svg\";\r\nimport JsSVG from \"../svgs/javascript.svg\";\r\nimport SQLSVG from \"../svgs/postgresql.svg\";\r\nimport PHPSVG from \"../svgs/php-1.svg\";\r\nimport FigmaSVG from \"../svgs/figma-1.svg\";\r\nimport NodeSVG from \"../svgs/nodejs-icon.svg\";\r\nimport RubySVG from \"../svgs/ruby.svg\";\r\nimport GraphQLSVG from \"../svgs/graphql.svg\";\r\nimport TypeScript from \"../svgs/typescript.svg\";\r\nimport Flutter from \"../svgs/flutter-logo.svg\";\r\nimport { mediaQuery } from \"../../devices\";\r\nimport styled from \"styled-components\";\r\n\r\n// TODO Maybe store info/points in an online DB. Then axios.get() info.\r\n// Allowing for updating info w/o needing to mess with this anymore...\r\n\r\nconst skillInfo = [\r\n  { name: \"C++\", icon: CppSVG },\r\n  { name: \"React\", icon: ReactSVG },\r\n  { name: \"JavaScript\", icon: JsSVG },\r\n  { name: \"SQL\", icon: SQLSVG },\r\n  { name: \"PHP\", icon: PHPSVG },\r\n  { name: \"Figma\", icon: FigmaSVG },\r\n  { name: \"RESTful APIs\", icon: \"\" },\r\n];\r\n\r\nconst additionalSkillInfo = [\r\n  { name: \"Node.js\", icon: NodeSVG },\r\n  { name: \"Ruby\", icon: RubySVG },\r\n  { name: \"GraphQL\", icon: GraphQLSVG },\r\n  { name: \"TypeScript\", icon: TypeScript },\r\n  { name: \"Flutter\", icon: Flutter },\r\n  { name: \"Agile Methodology\", icon: \"\" },\r\n];\r\n\r\nconst SectionSubtitle = styled.h2`\r\n  text-align: center;\r\n  font-weight: 500;\r\n  margin: 0px 0px 5px 0px;\r\n  font-size: 1.3em;\r\n  color: rgba(0, 0, 0, 0.7);\r\n  transition: all 200ms;\r\n  -webkit-transition: all 200ms;\r\n  -moz-transition: all 200ms;\r\n\r\n  :hover {\r\n    color: rgba(0, 0, 0, 0.9);\r\n    transition: all 200ms;\r\n    -webkit-transition: all 200ms;\r\n    -moz-transition: all 200ms;\r\n  }\r\n\r\n  @media ${mediaQuery.s} {\r\n    font-size: 2em;\r\n  }\r\n\r\n  @media ${mediaQuery.m} {\r\n    text-align: start;\r\n    font-size: 2em;\r\n  }\r\n`;\r\n\r\nconst SectionInfo = styled.p`\r\n  text-align: center;\r\n  margin: 0;\r\n  font-size: 1.1em;\r\n\r\n  @media ${mediaQuery.s} {\r\n    font-size: 1.37em;\r\n  }\r\n\r\n  @media ${mediaQuery.m} {\r\n    text-align: start;\r\n    font-size: 1.37em;\r\n  }\r\n`;\r\n\r\nconst SkillList = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 100px);\r\n  grid-template-rows: auto;\r\n  justify-content: center;\r\n  column-gap: 2rem;\r\n  row-gap: 2rem;\r\n\r\n  @media ${mediaQuery.s} {\r\n    grid-template-columns: repeat(4, 110px);\r\n    row-gap: 2.5rem;\r\n    column-gap: 2.5rem;\r\n  }\r\n\r\n  @media ${mediaQuery.m} {\r\n    grid-template-columns: auto auto auto auto;\r\n    grid-template-rows: auto;\r\n    justify-content: start;\r\n    column-gap: 1.2rem;\r\n    row-gap: 3rem;\r\n  }\r\n\r\n  @media ${mediaQuery.l} {\r\n    grid-template-columns: repeat(5, 130px);\r\n    row-gap: 2.5rem;\r\n    column-gap: 2.5rem;\r\n  }\r\n\r\n  @media ${mediaQuery.xl} {\r\n    grid-template-columns: repeat(6, 165px);\r\n    row-gap: 2.5rem;\r\n    column-gap: 2.5rem;\r\n  }\r\n\r\n  @media ${mediaQuery.xxl} {\r\n    grid-template-columns: repeat(7, 155px);\r\n    row-gap: 2.5rem;\r\n    column-gap: 2.5rem;\r\n  }\r\n`;\r\n\r\nconst SkillListItem = styled.div``;\r\n\r\nconst AdditionalSkillList = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(5, 50px);\r\n  grid-template-rows: auto;\r\n  justify-content: center;\r\n  column-gap: 1.6rem;\r\n  row-gap: 1.6rem;\r\n\r\n  @media ${mediaQuery.s} {\r\n    column-gap: 1.7rem;\r\n    row-gap: 1.7rem;\r\n  }\r\n\r\n  @media ${mediaQuery.m} {\r\n    grid-template-columns: auto auto auto auto auto auto auto;\r\n    grid-template-rows: auto;\r\n    justify-content: start;\r\n    column-gap: 1.8rem;\r\n    row-gap: 1.8rem;\r\n  }\r\n\r\n  @media ${mediaQuery.l} {\r\n    column-gap: 1.9rem;\r\n    row-gap: 1.9rem;\r\n  }\r\n`;\r\n\r\nconst AdditionalSkillListItem = styled.div``;\r\n\r\nconst AboutMe = (props) => {\r\n  return (\r\n    <>\r\n      <SectionSubtitle className=\"section-subtitle\"> Hi! </SectionSubtitle>\r\n      <SectionInfo className=\"section-info\">\r\n        My name is Fabian Gonzalez and I graduated from{\" \"}\r\n        <b style={{ color: \"rgb(240,80,35)\" }}>\r\n          The University of Texas Rio Grande Valley\r\n        </b>{\" \"}\r\n        with a B.Sc. in Computer Science in May 2020. 🎓\r\n      </SectionInfo>\r\n      {/* <pre className=\"prettyprint\">\r\n                    { `SELECT Skills FROM Info;` }\r\n            </pre> */}\r\n      <br />\r\n\r\n      <SectionSubtitle className=\"section-subtitle\"> Skills </SectionSubtitle>\r\n      <SkillList className=\"skill-list\">\r\n        {skillInfo.map((skill) => {\r\n          return (\r\n            <SkillListItem className=\"skill-list-item\">\r\n              {SkillBadge({\r\n                name: skill.name,\r\n                icon: skill.icon,\r\n                additional: false,\r\n                key: skill.name,\r\n              })}\r\n            </SkillListItem>\r\n          );\r\n        })}\r\n      </SkillList>\r\n\r\n      <br />\r\n\r\n      <SectionSubtitle className=\"section-subtitle\">\r\n        {\" \"}\r\n        Additional Skills{\" \"}\r\n      </SectionSubtitle>\r\n      <AdditionalSkillList className=\"additional-skill-list\">\r\n        {additionalSkillInfo.map((skill) => {\r\n          return (\r\n            <AdditionalSkillListItem className=\"additional-skill-list-item\">\r\n              {SkillBadge({\r\n                name: skill.name,\r\n                icon: skill.icon,\r\n                additional: true,\r\n                key: skill.name,\r\n              })}\r\n            </AdditionalSkillListItem>\r\n          );\r\n        })}\r\n      </AdditionalSkillList>\r\n    </>\r\n  );\r\n};\r\n\r\n/* Could do a SQL statement that selects skills/fun from fabian in multiverse.universe.milkyway.earth.texas\r\n */\r\nexport default AboutMe;\r\n","import React from \"react\";\r\n\r\n// TODO Showcase projects in a horizontal list of squares. When clicking one either expand (not bad), pop-up modal (eh), or redirect to project info..\r\n// Main project: Vocaloo. EARLY W.I.P. meant to learn about settings up services (socket.io, aws, etc), using graphql + node, react native, react, project management, ui/ux mockup, etc.\r\n// Side projecs: Resume, Haxxor-News, ScanAwake, Collabd, Self-Chat,\r\nconst Projects = (props) => {\r\n  return (\r\n    <>\r\n      {/* <iframe className=\"figma-frame\" title=\"Vocaloo Mobile Design\" src=\"https://www.figma.com/embed?embed_host=share&url=https%3A%2F%2Fwww.figma.com%2Ffile%2FnpIE5VzvbU1bZCpzshpUht%2FMobile-Application%3Fnode-id%3D0%253A1\" allowfullscreen></iframe> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n","import React from \"react\";\r\n\r\nconst WorkExperience = (props) => {\r\n  return <></>;\r\n};\r\n\r\nexport default WorkExperience;\r\n","import React from \"react\";\r\n\r\nconst FunFacts = (props) => {\r\n  return <></>;\r\n};\r\n\r\nexport default FunFacts;\r\n","import React from \"react\";\r\n\r\nconst OrgInvolvement = (props) => {\r\n  return <></>;\r\n};\r\n\r\nexport default OrgInvolvement;\r\n","import React from \"react\";\r\nimport AboutMe from \"./content/about_me\";\r\nimport Projects from \"./content/projects\";\r\nimport WorkExperience from \"./content/work_experience\";\r\nimport FunFacts from \"./content/fun_facts\";\r\nimport OrgInvolvement from \"./content/org_involvement\";\r\nimport { mediaQuery } from \"../devices\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ContentGrid = styled.div`\r\n  display: grid;\r\n  grid-template-rows: auto auto auto auto;\r\n  justify-content: start;\r\n`;\r\n\r\nconst SectionTitle = styled.h1`\r\n  text-align: center;\r\n  font-weight: 700;\r\n  font-style: normal;\r\n  margin: 0px;\r\n  font-size: 1.5em;\r\n\r\n  @media ${mediaQuery.s} {\r\n    font-size: 2.7em;\r\n  }\r\n\r\n  @media ${mediaQuery.m} {\r\n    text-align: start;\r\n    font-size: 3em;\r\n  }\r\n`;\r\n\r\nexport default function Content() {\r\n  return (\r\n    <ContentGrid>\r\n      <div>\r\n        <div id=\"about-me\">\r\n          <SectionTitle> About Me </SectionTitle>\r\n          <AboutMe />\r\n        </div>\r\n        <br />\r\n      </div>\r\n\r\n      <div>\r\n        <div id=\"work-experience\">\r\n          <SectionTitle> Work Experience </SectionTitle>\r\n          <WorkExperience />\r\n        </div>\r\n        <br />\r\n      </div>\r\n\r\n      <div>\r\n        <div id=\"projects\">\r\n          <SectionTitle> Projects </SectionTitle>\r\n          <Projects />\r\n        </div>\r\n        <br />\r\n      </div>\r\n\r\n      <div>\r\n        <div id=\"orgs\">\r\n          <SectionTitle> Organizations </SectionTitle>\r\n          <OrgInvolvement />\r\n        </div>\r\n        <br />\r\n      </div>\r\n\r\n      <div>\r\n        <div id=\"misc\">\r\n          <SectionTitle> Fun Facts </SectionTitle>\r\n          <FunFacts />\r\n        </div>\r\n      </div>\r\n    </ContentGrid>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport SideNav from \"./components/side_nav\";\nimport Content from \"./components/content\";\nimport UserInfo from \"./components/side_nav/user_info\";\nimport NavOpts from \"./components/side_nav/nav_opts\";\nimport styled from \"styled-components\";\nimport { mediaQuery } from \"./devices\";\n\n// TODO: Sticky navs!\n\n//const minVal = 900;\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return { width, height };\n}\n\nfunction useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(\n    getWindowDimensions()\n  );\n\n  useEffect(() => {\n    const handleResize = () => {\n      setWindowDimensions(getWindowDimensions());\n    };\n\n    window.addEventListener(\"resize\", handleResize);\n\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  return windowDimensions;\n}\n\nconst AppStyle = styled.div`\n  height: 100%;\n  width: 100%;\n`;\n\nconst View = styled.div`\n  display: grid;\n  gap: 0.3rem;\n  margin: 1.5vw;\n  grid-template-rows: auto auto minmax(55px, 75px);\n\n  @media ${mediaQuery.m} {\n    grid-template-columns: minmax(200px, 300px) auto;\n    margin: 2.5vh 5vw 0.5vh 2.5vw;\n  }\n`;\n\nfunction App() {\n  // TODO Possibly remove if not needed for icons.\n  // TODO Add some media queries involving height display\n  const { height, width } = useWindowDimensions();\n\n  // TODO! Optimize so it doesn't re-render children when getting window dims...\n  const isMiniWidth = width < 900;\n\n  // TODO Keep Side content on side when scrolling.\n  // TODO Keep UserInfo + NavOptions in their place when scrolling.\n  // if(isMiniWidth)\n  //   console.log('IS MINI!')\n  // else\n  //   console.log('IS BIG!')\n  return (\n    <AppStyle>\n      <View>\n        {isMiniWidth ? (\n          <>\n            <UserInfo isMini={isMiniWidth} id=\"user-info\" />\n            <Content isMini={isMiniWidth} />\n            <NavOpts isMini={isMiniWidth} id=\"nav-opts\" />\n          </>\n        ) : (\n          <>\n            <SideNav isMini={isMiniWidth} />\n            <Content isMini={isMiniWidth} />\n          </>\n        )}\n      </View>\n    </AppStyle>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}